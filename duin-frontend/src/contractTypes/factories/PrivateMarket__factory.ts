/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PrivateMarket, PrivateMarketInterface } from "../PrivateMarket";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "bidNullifiers",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bids",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "bidNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "merkleRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mintNft",
    inputs: [
      {
        name: "ownershipNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nftIndex",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "placeBid",
    inputs: [
      {
        name: "bidNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "tokenNullifiers",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferToken",
    inputs: [
      {
        name: "bidNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawBid",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "BidPlaced",
    inputs: [
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "bidNullifier",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BidWithdrawn",
    inputs: [
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "bidNullifier",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NftMinted",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "commitment",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b503360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610088575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007f9190610321565b60405180910390fd5b610097816100bc60201b60201c565b506100b160105f5f1b600361017f60201b9092919060201c565b60068190555061033a565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f61019b8484846101a460201b610c59176101da60201b60201c565b90509392505050565b5f8183106101c1576101bc828461026260201b60201c565b6101d2565b6101d1838361026260201b60201c565b5b905092915050565b5f6101f1856001018560ff1661027660201b60201c565b610207856002018560ff1661027660201b60201c565b5f8390505f5f90505b8560ff1681101561024d578161022f886002018361027d60201b60201c565b5f018190555061024082838660201c565b9150806001019050610210565b505f865f018190555080915050949350505050565b5f825f528160205260405f20905092915050565b8082555050565b5f5f8390506102b16102a684610298846102ba60201b60201c565b6102c960201b90919060201c565b6102d960201b60201c565b91505092915050565b5f815f5260205f209050919050565b5f81835f1c015f1b905092915050565b5f819050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61030b826102e2565b9050919050565b61031b81610301565b82525050565b5f6020820190506103345f830184610312565b92915050565b61163b806103475f395ff3fe6080604052600436106100a6575f3560e01c806362ea82db1161006357806362ea82db14610192578063715018a6146101cf57806389de38c4146101e55780638da5cb5b1461020f578063e9823b0314610239578063f2fde38b14610275576100a6565b80631f1c0940146100aa5780632eb4a7ab146100e657806335f2367f1461011057806337271cc71461013857806343a47d301461014e578063497ecfc514610176575b5f5ffd5b3480156100b5575f5ffd5b506100d060048036038101906100cb9190610fec565b61029d565b6040516100dd9190611031565b60405180910390f35b3480156100f1575f5ffd5b506100fa6102ba565b6040516101079190611059565b60405180910390f35b34801561011b575f5ffd5b50610136600480360381019061013191906110cc565b6102c0565b005b348015610143575f5ffd5b5061014c6105f4565b005b348015610159575f5ffd5b50610174600480360381019061016f9190610fec565b610879565b005b610190600480360381019061018b9190610fec565b61090a565b005b34801561019d575f5ffd5b506101b860048036038101906101b3919061111c565b610b44565b6040516101c692919061115f565b60405180910390f35b3480156101da575f5ffd5b506101e3610b64565b005b3480156101f0575f5ffd5b506101f9610b77565b604051610206919061119e565b60405180910390f35b34801561021a575f5ffd5b50610223610b7d565b60405161023091906111c6565b60405180910390f35b348015610244575f5ffd5b5061025f600480360381019061025a9190610fec565b610ba5565b60405161026c91906111c6565b60405180910390f35b348015610280575f5ffd5b5061029b6004803603810190610296919061111c565b610bd5565b005b6009602052805f5260405f205f915054906101000a900460ff1681565b60065481565b6102c8610c83565b5f73ffffffffffffffffffffffffffffffffffffffff1660085f8581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035d90611239565b60405180910390fd5b60095f8381526020019081526020015f205f9054906101000a900460ff16156103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb906112a1565b60405180910390fd5b600160095f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055505f60075f60085f8781526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f8160200151905060075f60085f8881526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f82015f9055600182015f9055505060085f8681526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555f8111156105e5575f8373ffffffffffffffffffffffffffffffffffffffff1682604051610560906112ec565b5f6040518083038185875af1925050503d805f811461059a576040519150601f19603f3d011682016040523d82523d5f602084013e61059f565b606091505b50509050806105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da9061134a565b60405180910390fd5b505b50506105ef610cc7565b505050565b6105fc610c83565b5f5f1b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01540361067f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610676906113b2565b60405180910390fd5b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f8160200151905060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f82015f9055600182015f9055505060085f835f015181526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555f81111561081a575f3373ffffffffffffffffffffffffffffffffffffffff1682604051610795906112ec565b5f6040518083038185875af1925050503d805f81146107cf576040519150601f19603f3d011682016040523d82523d5f602084013e6107d4565b606091505b5050905080610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f9061134a565b60405180910390fd5b505b3373ffffffffffffffffffffffffffffffffffffffff167fb8b2aae34fb58b490b9b0413c026f1fdccfd951c4bd8a121b122351babf7106b835f01518360405161086592919061115f565b60405180910390a25050610877610cc7565b565b610881610cd0565b5f60025490505f825f528160205260405f2090505f6108aa826003610d5790919063ffffffff16565b9150508060068190555060025f8154809291906108c6906113fd565b91905055507f4e4c5e95fb8abbf1bf27e2c4af988e2cb945e6b143bad0fb2d6c7626f46dbf9c83836040516108fc929190611444565b60405180910390a150505050565b610912610c83565b5f73ffffffffffffffffffffffffffffffffffffffff1660085f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a7906114db565b60405180910390fd5b5f5f1b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90611543565b60405180910390fd5b60405180604001604052808281526020013481525060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101559050503360085f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fe4a81d118d35683a4504cbe9eca1a0dd6e2f0003e876407a80a0380de45e305f8234604051610b3192919061115f565b60405180910390a2610b41610cc7565b50565b6007602052805f5260405f205f91509050805f0154908060010154905082565b610b6c610cd0565b610b755f610d71565b565b60025481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6008602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bdd610cd0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c4d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c4491906111c6565b60405180910390fd5b610c5681610d71565b50565b5f818310610c7057610c6b8284610e34565b610c7b565b610c7a8383610e34565b5b905092915050565b60025f5403610cbe576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b60015f81905550565b610cd8610e48565b73ffffffffffffffffffffffffffffffffffffffff16610cf6610b7d565b73ffffffffffffffffffffffffffffffffffffffff1614610d5557610d19610e48565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d4c91906111c6565b60405180910390fd5b565b5f5f610d668484610c59610e4f565b915091509250929050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f825f528160205260405f20905092915050565b5f33905090565b5f5f5f610e5b86610f3b565b9050855f015f815480929190610e7090611561565b919050559250806001901b8310610e8c57610e8b6041610f4b565b5b5f8390505f8690505f5f90505b83811015610f29575f5f600285610eb091906115d5565b1490508015610ece5782610ec78b60010184610f5c565b5f01819055505b610f1281610eeb57610ee38b60010184610f5c565b5f0154610eed565b835b82610ef85784610f09565b610f058c60020185610f5c565b5f01545b8a63ffffffff16565b9250600184901c9350508080600101915050610e99565b50848194509450505050935093915050565b5f81600201805490509050919050565b634e487b715f52806020526024601cfd5b5f5f839050610f84610f7f84610f7184610f8d565b610f9c90919063ffffffff16565b610fac565b91505092915050565b5f815f5260205f209050919050565b5f81835f1c015f1b905092915050565b5f819050919050565b5f5ffd5b5f819050919050565b610fcb81610fb9565b8114610fd5575f5ffd5b50565b5f81359050610fe681610fc2565b92915050565b5f6020828403121561100157611000610fb5565b5b5f61100e84828501610fd8565b91505092915050565b5f8115159050919050565b61102b81611017565b82525050565b5f6020820190506110445f830184611022565b92915050565b61105381610fb9565b82525050565b5f60208201905061106c5f83018461104a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61109b82611072565b9050919050565b6110ab81611091565b81146110b5575f5ffd5b50565b5f813590506110c6816110a2565b92915050565b5f5f5f606084860312156110e3576110e2610fb5565b5b5f6110f086828701610fd8565b935050602061110186828701610fd8565b9250506040611112868287016110b8565b9150509250925092565b5f6020828403121561113157611130610fb5565b5b5f61113e848285016110b8565b91505092915050565b5f819050919050565b61115981611147565b82525050565b5f6040820190506111725f83018561104a565b61117f6020830184611150565b9392505050565b5f819050919050565b61119881611186565b82525050565b5f6020820190506111b15f83018461118f565b92915050565b6111c081611091565b82525050565b5f6020820190506111d95f8301846111b7565b92915050565b5f82825260208201905092915050565b7f426964206e6f7420666f756e6420666f722074686973206e756c6c69666965725f82015250565b5f6112236020836111df565b915061122e826111ef565b602082019050919050565b5f6020820190508181035f83015261125081611217565b9050919050565b7f546f6b656e20616c7265616479207370656e74000000000000000000000000005f82015250565b5f61128b6013836111df565b915061129682611257565b602082019050919050565b5f6020820190508181035f8301526112b88161127f565b9050919050565b5f81905092915050565b50565b5f6112d75f836112bf565b91506112e2826112c9565b5f82019050919050565b5f6112f6826112cc565b9150819050919050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f611334600f836111df565b915061133f82611300565b602082019050919050565b5f6020820190508181035f83015261136181611328565b9050919050565b7f4e6f2062696420666f756e6420666f72207468697320616464726573730000005f82015250565b5f61139c601d836111df565b91506113a782611368565b602082019050919050565b5f6020820190508181035f8301526113c981611390565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61140782611186565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611439576114386113d0565b5b600182019050919050565b5f6040820190506114575f830185611150565b611464602083018461104a565b9392505050565b7f54686973206269644e756c6c696669657220697320616c726561647920696e205f8201527f7573650000000000000000000000000000000000000000000000000000000000602082015250565b5f6114c56023836111df565b91506114d08261146b565b604082019050919050565b5f6020820190508181035f8301526114f2816114b9565b9050919050565b7f53656e64657220616c72656164792068617320612062696400000000000000005f82015250565b5f61152d6018836111df565b9150611538826114f9565b602082019050919050565b5f6020820190508181035f83015261155a81611521565b9050919050565b5f61156b82611147565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361159d5761159c6113d0565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6115df82611147565b91506115ea83611147565b9250826115fa576115f96115a8565b5b82820690509291505056fea26469706673582212201d5b884daba5efe6d50219b75eea678e776066d60db07dbe908c1dc90919d95e64736f6c634300081e0033";

type PrivateMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateMarket__factory extends ContractFactory {
  constructor(...args: PrivateMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateMarket__factory {
    return super.connect(runner) as PrivateMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateMarketInterface {
    return new Interface(_abi) as PrivateMarketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateMarket {
    return new Contract(address, _abi, runner) as unknown as PrivateMarket;
  }
}
