/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PrivateMarket, PrivateMarketInterface } from "../PrivateMarket";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "acceptBid",
    inputs: [
      {
        name: "bidNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "currentOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "bidNullifiers",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bids",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "bidNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "placeBid",
    inputs: [
      {
        name: "bidNullifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawBid",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "BidAccepted",
    inputs: [
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BidPlaced",
    inputs: [
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "bidNullifier",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BidWithdrawn",
    inputs: [
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b503360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610088575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007f919061019f565b60405180910390fd5b6100978161009d60201b60201c565b506101b8565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018982610160565b9050919050565b6101998161017f565b82525050565b5f6020820190506101b25f830184610190565b92915050565b611076806101c55f395ff3fe60806040526004361061007a575f3560e01c8063888a79341161004d578063888a7934146101035780638da5cb5b1461012b578063e9823b0314610155578063f2fde38b146101915761007a565b806337271cc71461007e578063497ecfc51461009457806362ea82db146100b0578063715018a6146100ed575b5f5ffd5b348015610089575f5ffd5b506100926101b9565b005b6100ae60048036038101906100a99190610c44565b610439565b005b3480156100bb575f5ffd5b506100d660048036038101906100d19190610cc9565b610673565b6040516100e4929190610d1b565b60405180910390f35b3480156100f8575f5ffd5b50610101610693565b005b34801561010e575f5ffd5b5061012960048036038101906101249190610d42565b6106a6565b005b348015610136575f5ffd5b5061013f610993565b60405161014c9190610d8f565b60405180910390f35b348015610160575f5ffd5b5061017b60048036038101906101769190610c44565b6109bb565b6040516101889190610d8f565b60405180910390f35b34801561019c575f5ffd5b506101b760048036038101906101b29190610cc9565b6109eb565b005b6101c1610a6f565b5f5f1b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015403610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610e02565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f8160200151905060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f82015f9055600182015f9055505060035f835f015181526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555f8111156103df575f3373ffffffffffffffffffffffffffffffffffffffff168260405161035a90610e4d565b5f6040518083038185875af1925050503d805f8114610394576040519150601f19603f3d011682016040523d82523d5f602084013e610399565b606091505b50509050806103dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d490610eab565b60405180910390fd5b505b3373ffffffffffffffffffffffffffffffffffffffff167f03f0427e8bcfdf5f69217150cf160ebe2dac5fa607336fd7643bfd61a9019080826040516104259190610ec9565b60405180910390a25050610437610ab3565b565b610441610a6f565b5f73ffffffffffffffffffffffffffffffffffffffff1660035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d690610f52565b60405180910390fd5b5f5f1b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990610fba565b60405180910390fd5b60405180604001604052808281526020013481525060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101559050503360035f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fe4a81d118d35683a4504cbe9eca1a0dd6e2f0003e876407a80a0380de45e305f8234604051610660929190610d1b565b60405180910390a2610670610ab3565b50565b6002602052805f5260405f205f91509050805f0154908060010154905082565b61069b610abc565b6106a45f610b43565b565b6106ae610abc565b5f73ffffffffffffffffffffffffffffffffffffffff1660035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361074c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074390611022565b60405180910390fd5b5f60035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60025f60035f8781526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f8201548152602001600182015481525050905060025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f82015f9055600182015f9055505060035f8581526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555f8373ffffffffffffffffffffffffffffffffffffffff1682602001516040516108b790610e4d565b5f6040518083038185875af1925050503d805f81146108f1576040519150601f19603f3d011682016040523d82523d5f602084013e6108f6565b606091505b505090508061093a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093190610eab565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff167f68113ca7b748f7d17637d79856900bc9336b88166e726bc9b55c62a39408b40783602001516040516109849190610ec9565b60405180910390a25050505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109f3610abc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a63575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a5a9190610d8f565b60405180910390fd5b610a6c81610b43565b50565b60025f5403610aaa576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b60015f81905550565b610ac4610c06565b73ffffffffffffffffffffffffffffffffffffffff16610ae2610993565b73ffffffffffffffffffffffffffffffffffffffff1614610b4157610b05610c06565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b389190610d8f565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f819050919050565b610c2381610c11565b8114610c2d575f5ffd5b50565b5f81359050610c3e81610c1a565b92915050565b5f60208284031215610c5957610c58610c0d565b5b5f610c6684828501610c30565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c9882610c6f565b9050919050565b610ca881610c8e565b8114610cb2575f5ffd5b50565b5f81359050610cc381610c9f565b92915050565b5f60208284031215610cde57610cdd610c0d565b5b5f610ceb84828501610cb5565b91505092915050565b610cfd81610c11565b82525050565b5f819050919050565b610d1581610d03565b82525050565b5f604082019050610d2e5f830185610cf4565b610d3b6020830184610d0c565b9392505050565b5f5f60408385031215610d5857610d57610c0d565b5b5f610d6585828601610c30565b9250506020610d7685828601610cb5565b9150509250929050565b610d8981610c8e565b82525050565b5f602082019050610da25f830184610d80565b92915050565b5f82825260208201905092915050565b7f4e6f2062696420666f756e6420666f72207468697320616464726573730000005f82015250565b5f610dec601d83610da8565b9150610df782610db8565b602082019050919050565b5f6020820190508181035f830152610e1981610de0565b9050919050565b5f81905092915050565b50565b5f610e385f83610e20565b9150610e4382610e2a565b5f82019050919050565b5f610e5782610e2d565b9150819050919050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610e95600f83610da8565b9150610ea082610e61565b602082019050919050565b5f6020820190508181035f830152610ec281610e89565b9050919050565b5f602082019050610edc5f830184610d0c565b92915050565b7f54686973206269644e756c6c696669657220697320616c726561647920696e205f8201527f7573650000000000000000000000000000000000000000000000000000000000602082015250565b5f610f3c602383610da8565b9150610f4782610ee2565b604082019050919050565b5f6020820190508181035f830152610f6981610f30565b9050919050565b7f53656e64657220616c72656164792068617320612062696400000000000000005f82015250565b5f610fa4601883610da8565b9150610faf82610f70565b602082019050919050565b5f6020820190508181035f830152610fd181610f98565b9050919050565b7f426964206e6f7420666f756e6420666f722074686973206e756c6c69666965725f82015250565b5f61100c602083610da8565b915061101782610fd8565b602082019050919050565b5f6020820190508181035f83015261103981611000565b905091905056fea264697066735822122023f488c3e52537580340b210ffac2d54026c40f88813d7a706d8fc5d3d78a56d64736f6c634300081e0033";

type PrivateMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateMarket__factory extends ContractFactory {
  constructor(...args: PrivateMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateMarket__factory {
    return super.connect(runner) as PrivateMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateMarketInterface {
    return new Interface(_abi) as PrivateMarketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateMarket {
    return new Contract(address, _abi, runner) as unknown as PrivateMarket;
  }
}
